= Changelog
== 0.9.0
*Stylix Integration Removal*
- Removed Stylix system-wide theming configuration due to flakes-only requirement.
- Reverted to manual theming approach using existing icy color scheme in waybar and applications.
- Cleaned up documentation and configuration files to remove Stylix references.

*modules/stylix.nix*
- Removed Stylix module file as it's incompatible with npins-based (non-flake) setup.
- Stylix requires flake architecture which conflicts with current pin-based dependency management.

*configuration.nix*
- Removed stylix.nix module import to restore working system configuration.
- Maintained existing desktop environment and theming configurations.

*modules/Modules.md*
- Removed stylix.nix from module documentation.
- Updated module table to reflect current active modules only.

*npins/Npins.md*
- Removed Stylix pin reference from active pins table.
- Maintained existing manual theming approach with waybar icy configuration.

*Theming Architecture Enhancement*
- Stylix now provides automatic theming that complements existing manual theme configurations.
- Maintains compatibility with existing icy theme implementations in waybar, fuzzel, and GTK applications.
- Provides consistent theming for applications that were not previously manually themed.
- Enables easy theme switching through single base16 color scheme configuration.
- Reduces manual theme maintenance by automatically generating application-specific themes.

== 0.8.0
*Package Removal and Cleanup*
- Removed ignis widget system and all related components from the codebase.
- Removed Exo desktop environment package and configurations.
- Cleaned up experimental widget and desktop environment packages that were no longer needed.

*npins/sources.json*
- Removed Exo pin that was used for desktop environment configuration and theming utilities.
- Removed ignis pin that provided widget system functionality.
- Removed ignis-gvc pin that handled volume control functionality.
- Streamlined pin dependencies by removing unused experimental packages.

*de/niri.nix*
- Removed ignis widget system import and package declarations.
- Removed exopkgs import and exo package references.
- Cleaned up GTK4 Layer Shell environment variables that were specific to ignis.
- Removed ignis and exo from systemPackages, simplifying the Niri desktop environment.
- Eliminated dependencies on removed experimental packages while maintaining core Niri functionality.

*Dot/niri/config.kdl (and backup files)*
- Removed ignis-based application launcher keybinding (Mod+D).
- Removed ignis power menu keybinding (Mod+Escape).
- Removed ignis settings panel keybinding (Mod+I).
- Removed ignis screen recorder keybindings (Mod+Shift+Alt+R, Mod+Alt+R).
- Removed ignis initialization from startup commands.
- Maintained alternative launcher and utility keybindings using fuzzel and other tools.

*Dot/matugen/config.toml*
- Removed ignis template configuration that generated color schemes for the widget system.
- Cleaned up theming configuration to focus on remaining desktop components.

*Dot/ignis/*
- Completely removed ignis configuration directory and all associated widget configurations.
- Removed Python scripts and configuration files related to the ignis widget system.

*pkgs/pkgs.md*
- Updated experimental packages documentation to remove references to ignis and Exo.
- Cleaned up package table to reflect current available experimental builds.
- Maintained documentation for remaining packages: niri-companion, niri-tag, and stasis.

*pkgs/ directory*
- Removed exo.nix package definition file.
- Removed exopkgs.nix that managed exo and ignis package builds.
- Removed ignis.nix package definition file.
- Removed ignisgvc.nix that provided volume control library integration.
- Streamlined pkgs directory to contain only actively used experimental packages.

*General Cleanup*
- Comprehensive removal of all ignis and exo references throughout the configuration.
- Eliminated experimental widget system dependencies that were no longer maintained.
- Simplified Niri desktop environment configuration by removing complex widget overlays.
- Maintained core desktop functionality while reducing configuration complexity.
- Improved configuration maintainability by removing unused experimental components.

== 0.7.0
*npins/sources.json*
- Updated pins (sources.json), incremented version to 0.7.0. This update refreshed the commit hashes and versions for all tracked repositories, ensuring reproducibility and up-to-date sources.
- Added Exo pin for desktop environment configuration and theming utilities.
- Added ignis and ignis-gvc pins for widget system and volume control functionality.
- Added stasis pin for session management capabilities.
- Updated all existing pins including home-manager, niri-companion, nilla-utils, nixos-hardware, nixpkgs, nur-combined, nyx, and stylix to their latest versions.

*de/kde.nix*
- Enhanced SDDM display manager configuration with autoNumlock feature, improving user experience for KDE Plasma sessions.
- Restructured display manager settings for better organization and maintainability.

*de/niri.nix*
- Major refactor and enhancement of Niri desktop environment configuration.
- Added comprehensive environment variables for proper Wayland session detection (XDG_CURRENT_DESKTOP, XDG_SESSION_DESKTOP, NIXOS_OZONE_WL, MOZ_ENABLE_WAYLAND).
- Implemented complete XDG portal configuration with wlroots, GTK, and GNOME portals for proper desktop integration.
- Added detailed portal configuration for screenshots, screencasting, and remote desktop functionality.
- Enhanced security configuration with polkit and PAM services for swaylock.
- Added comprehensive system services including gnome-keyring, udisks2, power-profiles-daemon, and dbus.
- Significantly expanded package list with desktop shell widgets (ignis, stasis), theming tools (matugen, exo), and additional utilities.
- Integrated newly built packages including niri-companion, ignis, and stasis for enhanced desktop functionality.
- Added proper clipboard support with wl-clipboard and cliphist.
- Included screenshot and screen selection tools (slurp, grim, shotman).

*modules/dev.nix*
- Added nvfetcher to development tools for improved package fetching and management capabilities.
- Enhanced development workflow with additional package management utilities.

*modules/gaming.nix*
- Added cataclysm-dda-git to the gaming package selection, expanding available games for users.
- Continued to maintain comprehensive gaming setup with Steam, gamemode, and various game packages.

*modules/nix.nix*
- Added explicit system platform specification (x86_64-linux) for improved build reproducibility and clarity.
- Enhanced nixpkgs configuration with proper system architecture declaration.

*pkgs/*
- Complete restructuring and expansion of the experimental packages directory.
- Removed legacy niri-companion.nix, niri-switch.nix, and niri-tag.nix individual files.
- Created comprehensive package definitions: exo.nix, exopkgs.nix, ignis.nix, ignisgvc.nix, niricompanion.nix, niritag.nix, and stasis.nix.
- Implemented proper Python package building for ignis with GTK4 Layer Shell support and GObject introspection.
- Added ignis-gvc package for GNOME Volume Control integration with proper Meson build system.
- Created niri-companion package with Python 3.13 support and proper dependency management including custom typer version.
- Developed stasis package as a Rust application for session management with proper Wayland protocol support.
- Added Exo desktop environment package with comprehensive desktop configuration management.
- Updated pkgs.md documentation to reflect new package additions with proper descriptions and repository links.

*.vscode/settings.json*
- Added bashIde.explainshellEndpoint configuration for enhanced shell script development experience.
- Improved development environment with better shell command documentation support.

*Dot/waybar*
- Removed waybar symbolic link from Dot directory, indicating cleanup of unused desktop configuration links.

*General*
- Significant expansion of desktop environment capabilities with comprehensive Wayland compositor support.
- Enhanced package management with experimental build area containing cutting-edge desktop utilities.
- Improved development workflow with additional tools and better IDE integration.
- Major architectural improvements to Niri desktop environment for production-ready usage.
- Better integration between various desktop components through proper XDG portal configuration.
- Enhanced theming and widget system support through ignis and related packages.

== 0.6.0
*npins/sources.json*
- Updated pins (sources.json), incremented version to 0.6.0. This update refreshed the commit hashes and versions for all tracked repositories, ensuring reproducibility and up-to-date sources.
- Added new pins for nilla ecosystem components: Nilla-CLI, nilla, and nilla-utils for future deployment management.
- Added niri-companion pin for improved niri compositor experience.
- Added niri-tag pin for enhanced niri tagging functionality.
- Updated all existing pins including home-manager, nix-index-database, nixos-hardware, nixpkgs, npins, nur-combined, nyx, and stylix to their latest versions.

*de/niri.nix*
- Added new niri desktop environment configuration providing a complete Wayland compositor setup.
- Integrated niri-companion and niri-taskbar from NUR for enhanced window management.
- Configured XDG portals for proper desktop integration with wlroots protocols.
- Added comprehensive application suite including ghostty terminal, fuzzel launcher, mako notifications, and various system utilities.
- Included screen capture tools (shotman), wallpaper management (swww, swaybg), and session management (swayidle, swaylock).

*modules/cleaning.nix*
- Added new cleaning module providing system cleaning utilities including xdg-ninja and bleachbit for maintaining system cleanliness.

*modules/Modules.md*
- Updated documentation to include the new cleaning.nix module in the Available Modules section.
- Cleaned up Future Modules section to reflect current project state.

*npins/Npins.md*
- Added niri-tag to the list of current pins in documentation.
- Updated formatting and organization of current pins list.

*README.md*
- Expanded Directory Structure & Documentation: Now lists all major folders and their documentation files.
- Added Changelog section referencing changelog.asciidoc for versioned history.
- Added Roadmap (Short-term) section outlining immediate goals (secrets migration, deployment tooling, security hardening, etc).
- Added Configuration Notes with collapsible details for Display & Graphics, Security & Secrets, Package Management, and Development Status.
- Updated Development Status to clarify which modules and desktop environments are in use, deprecated, or removed.
- Improved contribution guidelines and Getting Started instructions for new users.
- Added reference to new CurrentIssues.md file for tracking desktop environment and configuration issues.

*CurrentIssues.md*
- Created new CurrentIssues.md file to track current desktop environment issues, workarounds, and troubleshooting notes. Linked from the main README.

*de/DesktopEnviroments.md*
- Updated documentation to clarify the status of each desktop environment.
- Added a section for former/experimental desktop environments.
- Marked lxqtniri.nix as deprecated and moved to a "graveyard" section.

*pkgs/pkgs.md*
- Added documentation for the pkgs/ folder, clarifying its experimental nature and listing included projects (niri-companion, niri-switch, niri-tag).

*.gitignore*
- Added .gitignore file to exclude configuration.nix, hardware-configuration.nix, and Dot/ symbolic link directory from version control.

*General*
- Improved documentation consistency and accuracy across module descriptions.
- Enhanced pin management with additional deployment and utility tools for future use.
- Added comprehensive niri desktop environment as an alternative to existing desktop configurations.

== 0.5.2
*de/DesktopEnviroments.md*
- Updated documentation to clarify MangoWC naming, folder structure, and the placeholder status of homede/.
- Removed all references to MangoWC and home-manager from documentation.

*de/homede/mangowc.nix*
- Fixed and cleaned up the module structure, ensuring correct import paths and attribute usage.
- Reformatted for consistent indentation and readability.
- Improved settings and autostart script for MangoWC.
- Removed mangowc.nix due to insufficient documentation on installation.

*npins/Npins.md*
- Removed mangowc, home-manager, ignis, and scenefx from the list of current pins and documentation.

*General*
- Improved formatting and consistency in documentation and code across the configuration.
- Removed home-manager as it was overall unneeded.

== 0.5.1
*npins/sources.json*
- removed flake-parts pin, as it is not used anywhere in the config.

*DesktopEnviroments.md*
- Updated documentation to reflect the correct name "MangoWC" instead of "MangoWM".
- Clarified that the "homede/" folder is a placeholder for future home-manager desktop environment configurations and is not yet configured.
- Removed references to "Gnome" as it is not currently configured.

*mangowc.nix*
-changed walker to rofi in the mangowc module, as rofi is more feature-rich and better supported.
== 0.5.0
*npins/sources.json*
- Updated pins (sources.json), incremented version to 0.5.0. This update refreshed the commit hashes and versions for all tracked repositories, ensuring reproducibility and up-to-date sources.
- Added or updated pins for MangoWC, Scenefx, Stylix, and mmsg, reflecting the latest upstream changes.

*de/mangowc.nix*
- Refactored and debugged the mangowc module integration. Ensured correct usage of pins, added proper argument sets, and constructed the required packages attribute for mango and its dependencies. Addressed multiple errors related to missing attributes, incorrect imports, and module structure.
- Added logic to build the mango package with the required mmsg pin, and improved error handling for missing or null packages.
- Cleaned up unused attributes and removed invalid flake-style inputs from the module.

*configuration.nix*
- Fixed Home Manager integration by correcting the import and usage of the home-manager pin. Ensured the home-manager.users.cam attribute is set correctly and not imported as a list.
- Improved let/in block structure and clarified pin usage for better maintainability.

*modules/home/home.nix*
- Fixed module structure by removing extraneous attribute sets and ensuring a valid NixOS module is returned.
- Added the required home.stateVersion option for Home Manager compatibility.

*General*
- Improved error handling and module argument sets across the configuration, ensuring all modules conform to NixOS standards and best practices.
- Cleaned up unused bindings and improved documentation in code comments where relevant.

== 0.4.0
*README.md*
- Expanded the main README with a new section linking to documentation files in each major folder. Added more detailed explanations for each section, including directory structure, usage notes, and documentation practices.
- Added notes clarifying that 0.1.0 updates revolve around updating npins, and that most of the npins section can be removed or customized, with future comments to indicate which parts are essential.

*modules/*
- Updated `Modules.md` to include `gaming.nix` in the list of available modules, with a clearer description of its purpose and contents.
- Improved formatting and consistency across module documentation.

*de/*
- Further refined `DesktopEnviroments.md` for clarity, ensuring section order and formatting are consistent and easy to follow.

*hosts/*
- Reformatted `Hosts.md` for improved readability and consistency. Enhanced the "Hosts" section with clearer descriptions and formatting.

*npins/*
- Cleaned up `Npins.md` for better structure and clarity. Updated the list of pins and future plans, and improved the formatting of pin descriptions.

*changelog.asciidoc*
- Added more detailed explanations to each changelog entry, providing context and rationale for changes across the project.

== 0.3.0
*modules/*
- Added `gaming.nix`, which introduces configurations and optimizations for gaming on NixOS. This includes setup for Steam, Mindustry, BAR, and other games, aiming to streamline the gaming experience across hosts.
- Improved documentation and formatting in `Modules.md` to provide clearer descriptions of each module, their intended use, and future plans for modularization.

*de/*
- Cleaned up and reformatted `DesktopEnviroments.md` for better readability. Clarified which desktop environments are currently configured, and provided more guidance on usage and documentation plans.

*hosts/*
- Updated and clarified host descriptions in `Hosts.md`. Each host entry now includes more context about the machine, its intended use, and any relevant notes about its configuration or future plans.

*npins/*
- Improved formatting in `Npins.md` for consistency and readability. Added a "Future Pins" section to document plans for evaluating alternative user environment and deployment tools, with links to relevant projects.

== 0.2.0
*npins/sources.json*
- Updated pins (sources.json), incremented version to 0.2.0. This update refreshed the commit hashes and versions for all tracked repositories, ensuring reproducibility and up-to-date sources.
- Added or updated pins for NUR, home-manager, nix-index-database, nixos-hardware, nixpkgs, npins, and nyx, reflecting the latest upstream changes.

*modules/*
- Added `security.nix`, which centralizes firewall and security-related settings for easier reuse across hosts.
- Added `nvidia.nix`, providing a dedicated module for NVIDIA driver installation and configuration, including options for driver version and related tweaks.

*hosts/*
- Enhanced `Hosts.md` with more detailed descriptions for each host, including their hardware roles and any special configuration notes.

== 0.1.0
*npins/sources.json*
- Initial pin setup for NUR, home-manager, nix-index-database, nixos-hardware, nixpkgs, npins, and nyx. This established the foundation for reproducible builds by locking dependencies to specific versions.

*modules/*
- Added initial modules: `common.nix` (shared settings like networking and browsers), `dev.nix` (CLI and development tools), `localization.nix` (locale and keyboard settings), and `nix.nix` (Nix package manager configuration).

*de/*
- Added the first version of `DesktopEnviroments.md` to document available desktop environment configurations. Included initial setup for KDE Plasma.

*hosts/*
- Created initial host configuration files: `Earth.nix` (Surface tablet), `Mercury.nix` (SteamDeck), `Moon.nix` (main laptop), and `Star.nix` (desktop PC).
- Added `Hosts.md` as a folder README to explain the purpose and usage of host-specific configurations.

*project*
- Set up `.vscode/settings.json` to enable Nix language server support and Markdown validation, improving the development experience in VS Code.